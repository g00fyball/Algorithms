#include<bits/stdc++.h>
using namespace std;

void answer(string s2,int m,int lps[])
{
    lps[0]=0;
    
    int i=1,l=0;
    
    while(i<m)
    {
        if(s2[i]==s2[l])
        {
            l++;
            lps[i]=l;
            i++;
        }
        else
        {
            if(l!=0)
            {
                l=lps[l-1];
            }
            else
            {
                lps[i]=0;
                i++;
            }
        }
    }
}

void helper(string s1,string s2)
{
    int n=s1.length(),m=s2.length();
    
    int lps[m];
    
    answer(s2,m,lps);
    
    int i=0,j=0;
    
    while(i<n)
    {
        if(s1[i]==s2[j])
        {
            i++;
            j++;
        }
        
        if(j==m)
        {
            cout<<"fount the pattern at -"<<i-j<<endl;
            j=lps[j-1];
        }
        else
        if(i<n && s1[i]!=s2[j])
        {
            if(j!=0)
            {
                j=lps[j-1];
            }
            else
            {
                i++;
            }
        }
    }
}

int main()
{
    string s1,s2;
    
    cin>>s1>>s2;
    
    helper(s1,s2);
    
    return 0;
}
